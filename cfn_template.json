{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
      "GithubHandlerApiURL": {
        "Description": "API dev stage endpoint",
        "Value": {
          "Fn::Sub": "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/dev/getcourses"
        }
      }
    },
    "Description": "AWS Workshop",
    "Resources": {
      "ApiGatewayApiDeployment7f6ec3cfde": {
        "Type": "AWS::ApiGateway::Deployment",
        "Properties": {
          "RestApiId": {
            "Ref": "ApiGatewayApi"
          },
          "Description": "RestApi deployment id: 7f6ec3cfded24b7aabbfe738b497993231906066",
          "StageName": "Stage"
        }
      },
      "ApiGatewayApi": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Body": {
            "info": {
              "version": "1.0",
              "title": {
                "Ref": "AWS::StackName"
              }
            },
            "paths": {
              "/getcourses": {
                "get": {
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${dynamodbgetfunction.Arn}/invocations"
                    }
                  },
                  "responses": {}
                }
              }
            },
            "swagger": "2.0"
          }
        }
      },
      "ApiGatewayApidevStage": {
        "Type": "AWS::ApiGateway::Stage",
        "Properties": {
          "DeploymentId": {
            "Ref": "ApiGatewayApiDeployment7f6ec3cfde"
          },
          "RestApiId": {
            "Ref": "ApiGatewayApi"
          },
          "StageName": "dev"
        }
      },
      "dynamodbgetfunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": "sam-artifacts-sou",
            "S3Key": "f6a3b160dc20b35ae9baf018f1724ff2"
          },
          "Description": "get items from dynamodb",
          "Tags": [
            {
              "Value": "SAM",
              "Key": "lambda:createdBy"
            }
          ],
          "MemorySize": 128,
          "Handler": "lambda_function.lambda_handler",
          "Role": {
            "Fn::GetAtt": [
              "LambdaDynamoDBRole",
              "Arn"
            ]
          },
          "Timeout": 5,
          "Runtime": "python3.7"
        }
      },
      "dynamodbgetfunctionApiEventPermissiondev": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "Principal": "apigateway.amazonaws.com",
          "FunctionName": {
            "Ref": "dynamodbgetfunction"
          },
          "SourceArn": {
            "Fn::Sub": [
              "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/getcourses",
              {
                "__Stage__": "*",
                "__ApiId__": {
                  "Ref": "ApiGatewayApi"
                }
              }
            ]
          }
        }
      },
      "LambdaDynamoDBRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": {
            "Fn::Sub": "LambdaDynamoDBRole-${AWS::Region}"
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess",
            "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
          ],
          "Description": "This role allows the lambda function to read data from dynamodb and publish logs to Cloudwatch logs",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ]
          }
        }
      }
    }
  }